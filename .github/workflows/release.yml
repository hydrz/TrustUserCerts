name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip

      - name: Fix script permissions
        run: |
          chmod +x workflow.sh
          ./workflow.sh fix-perm

      - name: Extract version from tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Processing version: $VERSION"

      - name: Validate module files
        run: |
          ./workflow.sh test

      - name: Build module zip
        run: |
          ./workflow.sh build
          MODULE_ZIP=$(ls *.zip 2>/dev/null || echo "")
          echo "MODULE_ZIP=$MODULE_ZIP" >> $GITHUB_ENV
          echo "Built ZIP file: $MODULE_ZIP"

      - name: Verify build success
        run: |
          if [ -z "${{ env.MODULE_ZIP }}" ]; then
            echo "Error: Failed to build module zip"
            exit 1
          fi
          echo "Successfully built: ${{ env.MODULE_ZIP }}"

      - name: Debug information
        run: |
          echo "GitHub Context Information:"
          echo "  Ref: ${{ github.ref }}"
          echo "  Ref Name: ${{ github.ref_name }}"
          echo "  Event: ${{ github.event_name }}"
          echo "  Repository: ${{ github.repository }}"
          echo "  Actor: ${{ github.actor }}"
          echo "  SHA: ${{ github.sha }}"
          echo "Environment Variables:"
          echo "  MODULE_ZIP: ${{ env.MODULE_ZIP }}"
          echo "  VERSION: ${{ env.VERSION }}"
          ls -la

      - name: Generate changelog
        run: |
          # 确保版本变量可用
          echo "Current version tag: ${{ github.ref_name }}"
          echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

          # 从CHANGELOG.md中提取相关部分
          VERSION="${{ github.ref_name }}"
          CHANGELOG_CONTENT=$(sed -n "/## ${VERSION}/,/## /p" CHANGELOG.md | sed '/## v/,$d' | sed '1d')

          # 如果提取失败，提供一个默认消息
          if [ -z "$CHANGELOG_CONTENT" ]; then
            CHANGELOG_CONTENT="此版本包含错误修复和性能改进。"
          fi

          # 使用多行语法正确设置环境变量
          {
            echo "CHANGELOG<<EOF"
            echo "$CHANGELOG_CONTENT"
            echo "EOF"
          } >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.VERSION }} 发布
          body: |
            # ${{ env.VERSION }} 更新说明

            ${{ env.CHANGELOG }}

            ## 安装方法

            通过Magisk管理器安装此模块
          files: ${{ env.MODULE_ZIP }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
